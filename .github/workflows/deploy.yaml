name: Build and deploy application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04 # perform all builds on GitHub VMs
    container: node:20
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: build frontend
        run: |
          cd frontend
          yarn install
          yarn build
      - name: regroup sources
        run: |
          mkdir backend/client
          mv frontend/dist/* backend/client
          rm -rf frontend
          mv backend app
          cd app
          rm -r test/ .gitignore README.md
      - name: build backend
        run: |
          cd app
          yarn install
          yarn build
      - name: create build artifact
        run: tar -czvf build.tar.gz app
      - name: upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: build.tar.gz

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: clear app directory
        run: |
          touch foo
          rm -r *
      - name: download build artifact
        uses: actions/download-artifact@v3
        with:
          name: app
      - name: extract build from artifact
        run: |
          tar -xf build.tar.gz
          mv app/* .
          rm -r app build.tar.gz
      - name: create env file
        run: |
          echo "PORT=${{ vars.PORT }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "ACCESS_SECRET=${{ vars.ACCESS_SECRET }}" >> .env
          echo "REFRESH_SECRET=${{ vars.REFRESH_SECRET }}" >> .env
          echo "VITE_API_ENDPOINT=${{ vars.VITE_API_ENDPOINT }}" >> .env
          echo "MAILER_HOST=${{ vars.MAILER_HOST }}" >> .env
          echo "MAILER_USER=${{ vars.MAILER_USER }}" >> .env
          echo "MAILER_PASSWORD=${{ vars.MAILER_PASSWORD }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
      - name: kill running application
        continue-on-error: true
        run: sudo pm2 stop ${{ vars.APP_NAME }}
      - name: migrate and populate database
        run: yarn migrate_db
      - name: run application 
        run: |
          sudo pm2 start
