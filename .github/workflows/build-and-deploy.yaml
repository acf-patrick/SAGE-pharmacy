name: Build and deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:20
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: build frontend
        run: |
          cd frontend
          yarn install
          yarn build
          mkdir ../client
          cp -r dist/* ../client
          cd ..
          rm -rf frontend
      - name: regroup sources
        run: |
          mv backend/* .
          rm -rf backend/
          rm -r test/ .gitignore README.md
      - name: build backend
        run: |
          yarn install
          yarn build
      - name: create env file
        run: |
          touch docker.env
          echo PORT=${{ env.PORT }} >> docker.env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> docker.env
          echo ACCESS_SECRET=${{ env.ACCESS_SECRET }} >> docker.env
          echo REFRESH_SECRET=${{ env.REFRESH_SECRET }} >> docker.env
          echo VITE_API_ENDPOINT=${{ env.VITE_API_ENDPOINT }} >> docker.env
          echo MAILER_HOST=${{ env.MAILER_HOST }} >> docker.env
          echo MAILER_USER=${{ env.MAILER_USER }} >> docker.env
          echo MAILER_PASSWORD=${{ env.MAILER_PASSWORD }} >> docker.env
      - name: login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build and push Docker image
        uses: docker/bake-action@v4
        with:
          push: true
      - name: create docker-compose file artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose.yaml
          path: docker-compose.yaml

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: copy docker-compose file
        uses: actions/download-artifact@v3
        with:
          name: docker-compose.yaml
      - name: login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: run Docker image
        run: |
          export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          sudo docker compose down
          sudo docker compose pull
          sudo docker compose up -d
