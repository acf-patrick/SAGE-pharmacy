name: Build and deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:20
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: build frontend
        run: |
          cd frontend
          yarn install
          yarn build
          mkdir ../client
          cp -r dist/* ../client
          cd ..
          rm -rf frontend
      - name: regroup sources
        run: |
          mv backend/* .
          rm -rf backend/
          rm -r test/ .gitignore README.md
      - name: commit changes
        run: |
          git config --global --add safe.directory $(pwd)
          git config --local user.name ${{ secrets.USER_NAME }}
          git config --local user.email ${{ secrets.USER_EMAIL }}
          git add .
          git commit -m "Build âœ¨"
      - name: checkout to build branch
        run: |
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ secrets.USER_NAME }}/${{ github.event.repository.name }}.git
          git push origin --delete preview
          git checkout -b preview
      - name: push changes
        uses: ad-m/github-push-action@master
        with:
          branch: preview

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: checkout prebuilt code
        uses: actions/checkout@v3
        with:
          ref: preview
      - name: create env file
        run: |
          touch docker.env
          echo PORT=${{ env.PORT }} >> docker.env
          echo DATABASE_URL=${{ env.DATABASE_URL }} >> docker.env
          echo ACCESS_SECRET=${{ env.ACCESS_SECRET }} >> docker.env
          echo REFRESH_SECRET=${{ env.REFRESH_SECRET }} >> docker.env
          echo VITE_API_ENDPOINT=${{ env.VITE_API_ENDPOINT }} >> docker.env
          echo MAILER_HOST=${{ env.MAILER_HOST }} >> docker.env
          echo MAILER_USER=${{ env.MAILER_USER }} >> docker.env
          echo MAILER_PASSWORD=${{ env.MAILER_PASSWORD }} >> docker.env
      - name: deploy
        run: |
          sudo docker compose down
          sudo docker compose up -d
