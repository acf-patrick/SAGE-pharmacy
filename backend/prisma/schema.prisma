// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  ORDERED
  PENDING
  RECEIVED
  FINISHED
  AVOIR
}

enum UserRole {
  ADMIN
  NORMAL
}

model User {
  id       String   @id @default(uuid())
  username String   @unique
  password String
  role     UserRole @default(NORMAL)
}

model Medicine {
  id                   String                 @id @default(uuid())
  name                 String                 @unique
  sellingPrice         Int
  costPrice            Int
  quantity             Int
  location             String
  dci                  String
  isTaxed              Boolean                @default(true)
  min                  Int
  max                  Int
  expirationDate       DateTime               @db.Date
  MedicineFromProvider MedicineFromProvider[]
}

model MedicineFromProvider {
  id               String         @id @default(uuid())
  name             String
  priceWithTax     Int
  priceWithoutTax  Int
  quantity         Int
  dci              String
  Provider         Provider       @relation(fields: [providerId], references: [id])
  providerId       String
  expirationDate   DateTime       @db.Date
  OrderMedicine    OrderMedicine?
  matchingMedicine Medicine?      @relation(fields: [medicineId], references: [id])
  medicineId       String?
}

model Provider {
  id                  String                 @id @default(uuid())
  accountName         String
  abridgment          String
  commonAccountNumber Int
  address             String
  complementAdress    String?
  postalCode          Int?
  City                String
  Country             String
  telephone           String[]
  telecopie           String?
  email               String?
  contactName         String?
  rc                  String?
  stat                String?
  nif                 String?
  cif                 String?
  collector           String
  name                String                 @unique
  medicines           MedicineFromProvider[]
  min                 Int                    @default(1) // Minimal value of purchase
  Order               Order[]
}

model OrderMedicine {
  id                     String               @id @default(uuid())
  medicine               MedicineFromProvider @relation(fields: [medicineFromProviderId], references: [id])
  quantity               Int
  medicineFromProviderId String               @unique
  Order                  Order?               @relation(fields: [orderId], references: [id])
  orderId                String?
}

model Order {
  id             String          @id @default(uuid())
  provider       Provider        @relation(fields: [providerName], references: [name])
  providerName   String          @unique
  createdAt      DateTime        @default(now())
  isValid        Boolean         @default(true)
  status         OrderStatus     @default(ORDERED)
  medicineOrders OrderMedicine[]
}
